@model QuoteCreator.Models.QuoteDto
@using QuoteCreator.Models
@{
    ViewBag.Title = "Quotes";
    var customers = new List<Customer>();
    var products = new List<Product>();
    products = ViewBag.Products;
    customers = ViewBag.Customers;
}

<h2>Create Quote</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Customer: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.CustomerId, customers.Select(x => new SelectListItem() { Value = x.Id.ToString(), Text = (x.FirstName + " " + x.LastName + " " + x.Country).ToString() }), "---Select A Customer ---", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Products: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.NewProductId, products.Select(x => new SelectListItem() { Value = x.Id.ToString(), Text = (x.Name + " " + x.Price).ToString() }), "---Select A Product ---", new { @class = "form-control", id = "productList" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Quantity: ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("newProductQuantity", 1, new { @class = "form-control input-sm pull-left", @id = "newProductQuantity" })
                <button type="button" id="addQuote" class="btn btn-primary btn-sm  pull-left">Add</button>
                @Html.ValidationMessageFor(model => model.NewProductId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{//Html.DisplayFor(model => model.Total, new { @class = "form-control", id = "total" })
                }
                    <span id="total" >0</span>

                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
            </div>
        </div>
        <table class="table" id="selectedProducts">
            <thead>
                <tr>
                    <th style="display:none">Id</th>
                    <th>Product Name</th>
                    <th>Product Price</th>
                    <th>Product Quantity</th>
                </tr>
            </thead>
            <tbody>
                @{ if (Model.QuoteProducts.Count > 0)
                    {

                        foreach (var item in Model.QuoteProducts)
                        {
                            <tr>
                                <td style="display:none">@item.Product.Id</td>
                                <td>@item.Product.Name</td>
                                <td>@item.Product.Price</td>
                                <td>@item.Quantity</td>
                                <td><a href="#" class="removeProduct">Remove</a></td>
                            </tr>
                        }
                    }
                }
            </tbody>

        </table>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submitBtn" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
                    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/tableToJson.min.js"></script>
<script src="~/Scripts/quotes.js"></script>

